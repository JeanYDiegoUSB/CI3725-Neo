DECLARACION: "var" ID ":" TIPO

ID:	VAR
	| VAR, ID

ASIGNACION: ID <- EXP

EXP:  Literal_Bool
	| Literal_Int
	| Literal_Char
	| VAR
	| EXP_A
	| EXP_B
	| EXP_C
	| EXP_M


CONDICIONAL:	if EXP_B -> INSTR end
		| if EXP_B -> INSTR otherwise INSTR end


EXP_B: Literal_Bool
	| BIN_R


BIN_R:	EXP ">" EXP
	| EXP ">="EXP
	| EXP"<"EXP
	| EXP "<=" EXP
	| EXP "=" EXP
	| EXP "/=" EXP
	|"("EXP")"

EXP_C: EXP "++"
	| EXP "--"
	| "#" EXP


EXP_A:	EXP "+" EXP
	| EXP "-" EXP
	| EXP "*" EXP
	| EXP "/" EXP
	| EXP "%" EXP
	| "-" EXP
	| "("EXP")"



INSTR:	ASIGNACION
	| CONDICIONAL
	| INSTR.INSTR
	| REP_DET
	| REP_IND
	| ALCANCE
	| ENTRADA
	| SALIDA


REP_DET:"for" ID "from" EXP_A "to" EXP_A "->" INSTR "end"
	|"for" ID "from" EXP_A "to" EXP_A "step" EXP_A "->" INSTR "end"

REP_IND:"while" EXP_B "->" INSTR end

ALCANCE: "with" DECLARACION	"begin" INSTR "end"
	| "begin" INSTR "end"



ENTRADA: "read" IDENTIFICADOR

SALIDA:	"print" IDENTIFICADOR



EXP_M:	Literal_Matriz
	| VAR
	| EXP_M "::" EXP_M
	| "$" EXP_M
	| EXP_M"?"


Literal_Bool: True
			| False

Literal_Int: NUM
			| -NUM

NUM: 0
	|1
	|2
	|3
	|4
	|5
	|6
	|7
	|8
	|9
	|0NUM
	|1NUM
	|2NUM
	|3NUM
	|4NUM
	|5NUM
	|6NUM
	|7NUM
	|8NUM
	|9NUM



Literal_Char:	"\'"[a..zA..Z]"\'"
		| '\n'
		| '\\'
		| '\t'
		| '\''


Literal_Matriz:  {Literal_M}
			| Literal_M , Literal_M
			| EXP

	

VAR: TkID


TIPO: 	"int"
	| "char"
	| "matriz of" TAM TIPO

TAM:	"["AUX_TAM "," NUM"]"
	| "["NUM"]"

AUX_TAM:	NUM
	|	AUX_TAM,NUM

